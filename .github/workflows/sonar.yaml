name: Sonar checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: ubuntu-latest
    services:
      smtp4dev:
        image: rnwood/smtp4dev
        ports:
          - 25:25       # SMTP port
          - 8080:80   # Web UI/API port
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
        
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanners
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir .\.sonar\scanner
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PROJECT_PATH: './V1'
          TEST_PROJECT_PATH: './V1.Tests'
          SONAR_EXCLUSION: "**/Migrations/**"
          SONAR_COVERAGE_EXCLUSION: "**/Migrations/**,**/Program.cs"
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"ckw28502_Webshop-api-v1" /o:"ckw28502" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=**/coverage.xml /d:sonar.scanner.scanAll=false /d:sonar.coverage.exclusions="${{ env.SONAR_COVERAGE_EXCLUSION }}" /d:sonar.exclusions="${{ env.SONAR_EXCLUSION }}"
          dotnet build ${{ env.PROJECT_PATH }} --no-incremental
          dotnet-coverage collect "dotnet test ${{ env.TEST_PROJECT_PATH }} --configuration Release" -f xml -o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
